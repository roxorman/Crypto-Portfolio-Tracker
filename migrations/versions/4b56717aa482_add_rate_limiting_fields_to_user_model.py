"""Add rate limiting fields to user model

Revision ID: 4b56717aa482
Revises: c5c4f0cc0733
Create Date: 2025-06-24 17:50:26.490011

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4b56717aa482'
down_revision: Union[str, None] = 'c5c4f0cc0733'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_alerts_active_type_partial', table_name='alerts', postgresql_where='(is_active = true)')
    op.drop_index('idx_alerts_user_id', table_name='alerts')
    op.create_index('idx_alerts_user_id_active_type', 'alerts', ['user_id', 'is_active', 'alert_type'], unique=False)
    op.create_index(op.f('ix_alerts_alert_type'), 'alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_alerts_cmc_id'), 'alerts', ['cmc_id'], unique=False)
    op.create_index(op.f('ix_alerts_is_active'), 'alerts', ['is_active'], unique=False)
    op.add_column('users', sa.Column('api_call_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('users', sa.Column('last_api_call_at', postgresql.TIMESTAMP(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'last_api_call_at')
    op.drop_column('users', 'api_call_count')
    op.drop_index(op.f('ix_alerts_is_active'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_cmc_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_type'), table_name='alerts')
    op.drop_index('idx_alerts_user_id_active_type', table_name='alerts')
    op.create_index('idx_alerts_user_id', 'alerts', ['user_id'], unique=False)
    op.create_index('idx_alerts_active_type_partial', 'alerts', ['alert_type'], unique=False, postgresql_where='(is_active = true)')
    # ### end Alembic commands ###
