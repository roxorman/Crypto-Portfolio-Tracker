"""Remove portfolio feature

Revision ID: 36934e6acbf5
Revises: 4b56717aa482
Create Date: 2025-06-25 00:32:40.661084

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '36934e6acbf5'
down_revision: Union[str, None] = '4b56717aa482'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_portfolio_snapshots_portfolio_id', table_name='portfolio_snapshots')
    op.drop_index('idx_portfolio_snapshots_timestamp', table_name='portfolio_snapshots')
    op.drop_index('idx_portfolio_snapshots_user_id', table_name='portfolio_snapshots')
    op.drop_index('idx_portfolio_snapshots_wallet_id', table_name='portfolio_snapshots')
    op.drop_index('idx_snapshot_user_target_time', table_name='portfolio_snapshots')
    op.drop_index('ix_portfolio_snapshots_portfolio_id', table_name='portfolio_snapshots')
    op.drop_index('ix_portfolio_snapshots_timestamp', table_name='portfolio_snapshots')
    op.drop_index('ix_portfolio_snapshots_user_id', table_name='portfolio_snapshots')
    op.drop_index('ix_portfolio_snapshots_wallet_id', table_name='portfolio_snapshots')
    op.drop_table('portfolio_snapshots')
    op.drop_index('idx_portfolio_wallets_portfolio_id', table_name='portfolio_wallets')
    op.drop_index('idx_portfolio_wallets_wallet_id', table_name='portfolio_wallets')
    op.drop_table('portfolio_wallets')
    op.drop_index('idx_portfolios_user_id', table_name='portfolios')
    op.drop_index('ix_portfolios_user_id', table_name='portfolios')
    op.drop_table('portfolios')
    op.add_column('alerts', sa.Column('wallet_id', sa.Integer(), nullable=True))
    op.add_column('alerts', sa.Column('tracked_wallet_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_alerts_tracked_wallet_id'), 'alerts', ['tracked_wallet_id'], unique=False)
    op.create_index(op.f('ix_alerts_wallet_id'), 'alerts', ['wallet_id'], unique=False)
    op.create_foreign_key(None, 'alerts', 'wallets', ['wallet_id'], ['wallet_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'alerts', 'tracked_wallets', ['tracked_wallet_id'], ['tracked_wallet_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'alerts', type_='foreignkey')
    op.drop_constraint(None, 'alerts', type_='foreignkey')
    op.drop_index(op.f('ix_alerts_wallet_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_tracked_wallet_id'), table_name='alerts')
    op.drop_column('alerts', 'tracked_wallet_id')
    op.drop_column('alerts', 'wallet_id')
    op.create_table('portfolios',
    sa.Column('portfolio_id', sa.INTEGER(), server_default=sa.text("nextval('portfolios_portfolio_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='portfolios_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('portfolio_id', name='portfolios_pkey'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_portfolio_name'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_portfolios_user_id', 'portfolios', ['user_id'], unique=False)
    op.create_index('idx_portfolios_user_id', 'portfolios', ['user_id'], unique=False)
    op.create_table('portfolio_wallets',
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wallet_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('added_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('association_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.portfolio_id'], name='portfolio_wallets_portfolio_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.wallet_id'], name='portfolio_wallets_wallet_id_fkey', ondelete='CASCADE'),
    sa.UniqueConstraint('portfolio_id', 'wallet_id', name='uq_portfolio_wallet')
    )
    op.create_index('idx_portfolio_wallets_wallet_id', 'portfolio_wallets', ['wallet_id'], unique=False)
    op.create_index('idx_portfolio_wallets_portfolio_id', 'portfolio_wallets', ['portfolio_id'], unique=False)
    op.create_table('portfolio_snapshots',
    sa.Column('snapshot_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wallet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('total_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('token_balances', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.CheckConstraint('portfolio_id IS NOT NULL AND wallet_id IS NULL OR portfolio_id IS NULL AND wallet_id IS NOT NULL OR portfolio_id IS NULL AND wallet_id IS NULL', name='check_snapshot_target'),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.portfolio_id'], name='portfolio_snapshots_portfolio_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='portfolio_snapshots_user_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.wallet_id'], name='portfolio_snapshots_wallet_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('snapshot_id', name='portfolio_snapshots_pkey')
    )
    op.create_index('ix_portfolio_snapshots_wallet_id', 'portfolio_snapshots', ['wallet_id'], unique=False)
    op.create_index('ix_portfolio_snapshots_user_id', 'portfolio_snapshots', ['user_id'], unique=False)
    op.create_index('ix_portfolio_snapshots_timestamp', 'portfolio_snapshots', ['timestamp'], unique=False)
    op.create_index('ix_portfolio_snapshots_portfolio_id', 'portfolio_snapshots', ['portfolio_id'], unique=False)
    op.create_index('idx_snapshot_user_target_time', 'portfolio_snapshots', ['user_id', 'portfolio_id', 'wallet_id', sa.literal_column('timestamp DESC')], unique=False)
    op.create_index('idx_portfolio_snapshots_wallet_id', 'portfolio_snapshots', ['wallet_id'], unique=False)
    op.create_index('idx_portfolio_snapshots_user_id', 'portfolio_snapshots', ['user_id'], unique=False)
    op.create_index('idx_portfolio_snapshots_timestamp', 'portfolio_snapshots', ['timestamp'], unique=False)
    op.create_index('idx_portfolio_snapshots_portfolio_id', 'portfolio_snapshots', ['portfolio_id'], unique=False)
    # ### end Alembic commands ###
